{"numTotalTestSuites":73,"numPassedTestSuites":73,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":424,"numPassedTests":342,"numFailedTests":82,"numPendingTests":0,"numTodoTests":0,"startTime":1752873118124,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":21,"failureMessages":[]},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue shows splash screen when initializing","status":"passed","title":"shows splash screen when initializing","duration":4,"failureMessages":[]},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue shows login form when not authenticated","status":"failed","title":"shows login form when not authenticated","duration":6,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":91,"column":68}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue shows main content when authenticated","status":"failed","title":"shows main content when authenticated","duration":5,"failureMessages":["expected '' to contain 'Main app content'"],"location":{"line":112,"column":28}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue displays background image when provided","status":"passed","title":"displays background image when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue displays background video when provided","status":"passed","title":"displays background video when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue passes correct props to TSplashScreen","status":"failed","title":"passes correct props to TSplashScreen","duration":3,"failureMessages":["expected 'Todo' to be 'test-app' // Object.is equality"],"location":{"line":153,"column":43}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue passes correct props to TLoginForm","status":"failed","title":"passes correct props to TLoginForm","duration":3,"failureMessages":["Cannot call props on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue initializes auth store on mount","status":"failed","title":"initializes auth store on mount","duration":3,"failureMessages":["expected \"spy\" to be called at least once"],"location":{"line":182,"column":38}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue handles splash completion correctly","status":"failed","title":"handles splash completion correctly","duration":3,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":198,"column":68}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue shows title when provided","status":"failed","title":"shows title when provided","duration":5,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue handles login success correctly","status":"failed","title":"handles login success correctly","duration":6,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue handles login error correctly","status":"failed","title":"handles login error correctly","duration":3,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue applies correct CSS classes","status":"passed","title":"applies correct CSS classes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAuthWrapper.vue"],"fullName":" TAuthWrapper.vue handles video autoplay attributes correctly","status":"failed","title":"handles video autoplay attributes correctly","duration":2,"failureMessages":["expected undefined to be '' // Object.is equality"],"location":{"line":288,"column":39}}],"startTime":1752873119566,"endTime":1752873119636,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TAuthWrapper/TAuthWrapper.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":16,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue shows header when showHeader is true","status":"passed","title":"shows header when showHeader is true","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue hides header when showHeader is false","status":"passed","title":"hides header when showHeader is false","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue passes correct props to TTopBar","status":"passed","title":"passes correct props to TTopBar","duration":3,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue passes custom menu items to TTopBar","status":"passed","title":"passes custom menu items to TTopBar","duration":3,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue emits back event when TTopBar emits back","status":"passed","title":"emits back event when TTopBar emits back","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue emits profile event when TTopBar emits profile","status":"passed","title":"emits profile event when TTopBar emits profile","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue emits settings event when TTopBar emits settings","status":"passed","title":"emits settings event when TTopBar emits settings","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue emits logout event when TTopBar emits logout","status":"passed","title":"emits logout event when TTopBar emits logout","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue emits menu-item-click event when TTopBar emits menu-item-click","status":"passed","title":"emits menu-item-click event when TTopBar emits menu-item-click","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue renders top-bar-center slot content","status":"passed","title":"renders top-bar-center slot content","duration":3,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue renders top-bar-actions slot content","status":"passed","title":"renders top-bar-actions slot content","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue renders footer when footer slot is provided","status":"passed","title":"renders footer when footer slot is provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue does not render footer when footer slot is empty","status":"passed","title":"does not render footer when footer slot is empty","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue applies correct default props","status":"passed","title":"applies correct default props","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAppLayout.vue"],"fullName":" TAppLayout.vue maintains correct component structure","status":"passed","title":"maintains correct component structure","duration":2,"failureMessages":[]}],"startTime":1752873120014,"endTime":1752873120057,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TAppLayout/TAppLayout.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":17,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue applies correct type classes","status":"passed","title":"applies correct type classes","duration":14,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue applies correct color CSS variable","status":"passed","title":"applies correct color CSS variable","duration":1,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue shows close button when close prop is true","status":"passed","title":"shows close button when close prop is true","duration":3,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue hides close button when close prop is false","status":"passed","title":"hides close button when close prop is false","duration":2,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue shows icon when banner type has associated icon","status":"passed","title":"shows icon when banner type has associated icon","duration":2,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue hides banner when close button is clicked","status":"passed","title":"hides banner when close button is clicked","duration":4,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue renders slot content correctly","status":"passed","title":"renders slot content correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue passes correct props to close button","status":"passed","title":"passes correct props to close button","duration":1,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue maintains banner visibility state","status":"passed","title":"maintains banner visibility state","duration":1,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue handles different banner types with correct icons","status":"passed","title":"handles different banner types with correct icons","duration":39,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue applies correct CSS classes structure","status":"passed","title":"applies correct CSS classes structure","duration":2,"failureMessages":[]},{"ancestorTitles":["","TBanner.vue"],"fullName":" TBanner.vue handles banner lifecycle correctly","status":"passed","title":"handles banner lifecycle correctly","duration":4,"failureMessages":[]}],"startTime":1752873120442,"endTime":1752873120535,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TBanner/TBanner.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":12,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders slot content","status":"passed","title":"renders slot content","duration":5,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies size classes correctly","status":"passed","title":"applies size classes correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies type classes correctly","status":"passed","title":"applies type classes correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies color classes correctly","status":"passed","title":"applies color classes correctly","duration":6,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders icon when provided","status":"passed","title":"renders icon when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders hover icon when provided","status":"passed","title":"renders hover icon when provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue hides label text when type is icon-only","status":"passed","title":"hides label text when type is icon-only","duration":6,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue disables button when disabled prop is true","status":"passed","title":"disables button when disabled prop is true","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders as anchor tag when \"to\" prop is provided","status":"passed","title":"renders as anchor tag when \"to\" prop is provided","duration":5,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue renders as custom element when element prop is provided","status":"passed","title":"renders as custom element when element prop is provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue shows count badge when count prop is provided","status":"passed","title":"shows count badge when count prop is provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue handles status states correctly","status":"passed","title":"handles status states correctly","duration":6,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies shadow class when shadow prop is true","status":"passed","title":"applies shadow class when shadow prop is true","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies reverse class when reverse prop is true","status":"passed","title":"applies reverse class when reverse prop is true","duration":0,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue sets correct button type attribute","status":"passed","title":"sets correct button type attribute","duration":2,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue defaults to button type when htmlButtonType is auto","status":"passed","title":"defaults to button type when htmlButtonType is auto","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue emits click event when clicked","status":"passed","title":"emits click event when clicked","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue does not emit click event when disabled","status":"passed","title":"does not emit click event when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies hide label classes correctly","status":"passed","title":"applies hide label classes correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue passes through additional attributes","status":"passed","title":"passes through additional attributes","duration":1,"failureMessages":[]},{"ancestorTitles":["","TButton.vue"],"fullName":" TButton.vue applies custom styles when provided","status":"passed","title":"applies custom styles when provided","duration":3,"failureMessages":[]}],"startTime":1752873120009,"endTime":1752873120077,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TButton/TButton.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":15,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue applies correct type classes","status":"passed","title":"applies correct type classes","duration":8,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue shows correct icon for each type","status":"passed","title":"shows correct icon for each type","duration":7,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue shows dismiss button when dismissible is true","status":"passed","title":"shows dismiss button when dismissible is true","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue hides dismiss button when dismissible is false","status":"passed","title":"hides dismiss button when dismissible is false","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue emits dismiss event when close button is clicked","status":"passed","title":"emits dismiss event when close button is clicked","duration":3,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue hides alert when dismiss button is clicked","status":"passed","title":"hides alert when dismiss button is clicked","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue renders slot content correctly","status":"passed","title":"renders slot content correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue has correct aria-label on close button","status":"passed","title":"has correct aria-label on close button","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue displays close icon in dismiss button","status":"passed","title":"displays close icon in dismiss button","duration":1,"failureMessages":[]},{"ancestorTitles":["","TAlert.vue"],"fullName":" TAlert.vue maintains visibility state independently","status":"passed","title":"maintains visibility state independently","duration":14,"failureMessages":[]}],"startTime":1752873120642,"endTime":1752873120699,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TAlert/TAlert.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TCard"],"fullName":" TCard renders with default props","status":"passed","title":"renders with default props","duration":8,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders title when provided","status":"passed","title":"renders title when provided","duration":3,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders category with icon","status":"passed","title":"renders category with icon","duration":7,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders emoji when provided","status":"passed","title":"renders emoji when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders icon when provided","status":"passed","title":"renders icon when provided","duration":5,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders image with alt text","status":"passed","title":"renders image with alt text","duration":2,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard applies size classes correctly","status":"passed","title":"applies size classes correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard handles clickable state","status":"passed","title":"handles clickable state","duration":2,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard emits click event when clickable","status":"passed","title":"emits click event when clickable","duration":2,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard handles keyboard events when clickable","status":"passed","title":"handles keyboard events when clickable","duration":2,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard does not emit click when not clickable","status":"passed","title":"does not emit click when not clickable","duration":1,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard applies custom background color","status":"passed","title":"applies custom background color","duration":1,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders action buttons","status":"passed","title":"renders action buttons","duration":4,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard renders slot content in description","status":"passed","title":"renders slot content in description","duration":8,"failureMessages":[]},{"ancestorTitles":["","TCard"],"fullName":" TCard applies correct classes for different content types","status":"passed","title":"applies correct classes for different content types","duration":2,"failureMessages":[]}],"startTime":1752873120310,"endTime":1752873120362,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TCard/TCard.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":15,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders slot content in label","status":"passed","title":"renders slot content in label","duration":2,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue applies color classes and styles correctly","status":"passed","title":"applies color classes and styles correctly","duration":6,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders icon when provided","status":"passed","title":"renders icon when provided","duration":4,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders count when provided","status":"passed","title":"renders count when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue does not render count when undefined","status":"passed","title":"does not render count when undefined","duration":1,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders tooltip when provided","status":"passed","title":"renders tooltip when provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue does not render tooltip when not provided","status":"passed","title":"does not render tooltip when not provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue applies icon hide classes correctly","status":"passed","title":"applies icon hide classes correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue applies label hide classes correctly","status":"passed","title":"applies label hide classes correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders pre-content slot","status":"passed","title":"renders pre-content slot","duration":4,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders post-content slot","status":"passed","title":"renders post-content slot","duration":3,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue combines multiple props correctly","status":"passed","title":"combines multiple props correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TChip.vue"],"fullName":" TChip.vue renders content wrapper correctly","status":"passed","title":"renders content wrapper correctly","duration":3,"failureMessages":[]}],"startTime":1752873120164,"endTime":1752873120213,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TChip/TChip.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue renders correctly with items","status":"passed","title":"renders correctly with items","duration":24,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue renders drag handles when enabled","status":"passed","title":"renders drag handles when enabled","duration":5,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue hides drag handles when disabled","status":"passed","title":"hides drag handles when disabled","duration":3,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue applies dragging class to dragged item","status":"passed","title":"applies dragging class to dragged item","duration":4,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue applies drag-over class to target item","status":"passed","title":"applies drag-over class to target item","duration":3,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue applies disabled class when not enabled","status":"passed","title":"applies disabled class when not enabled","duration":3,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue sets draggable attribute correctly","status":"passed","title":"sets draggable attribute correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue sets correct data attributes","status":"passed","title":"sets correct data attributes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue calls drag handlers on drag events","status":"passed","title":"calls drag handlers on drag events","duration":5,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue calls touch handlers on touch events","status":"passed","title":"calls touch handlers on touch events","duration":3,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue passes correct props to slot","status":"passed","title":"passes correct props to slot","duration":7,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue handles empty items array","status":"passed","title":"handles empty items array","duration":2,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue passes onReorder callback to useDraggable","status":"passed","title":"passes onReorder callback to useDraggable","duration":2,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue has correct drag handle icon","status":"passed","title":"has correct drag handle icon","duration":2,"failureMessages":[]},{"ancestorTitles":["","TDraggableList.vue"],"fullName":" TDraggableList.vue maintains proper structure with content wrapper","status":"passed","title":"maintains proper structure with content wrapper","duration":2,"failureMessages":[]}],"startTime":1752873119003,"endTime":1752873119075,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TDraggableList/TDraggableList.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue renders correctly with basic config","status":"passed","title":"renders correctly with basic config","duration":20,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue passes correct props to TAuthWrapper","status":"passed","title":"passes correct props to TAuthWrapper","duration":2,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue passes correct props to TAppLayout","status":"passed","title":"passes correct props to TAppLayout","duration":2,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue shows loading state when loading prop is true","status":"passed","title":"shows loading state when loading prop is true","duration":2,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue handles profile action correctly","status":"failed","title":"handles profile action correctly","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'open')"],"location":{"line":216,"column":36}},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue handles settings action correctly","status":"failed","title":"handles settings action correctly","duration":3,"failureMessages":["Cannot read properties of undefined (reading 'open')"],"location":{"line":238,"column":36}},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue handles logout action correctly","status":"failed","title":"handles logout action correctly","duration":3,"failureMessages":["expected \"spy\" to be called at least once"],"location":{"line":251,"column":35}},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue handles back action correctly","status":"passed","title":"handles back action correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue navigates to home when no back history exists","status":"passed","title":"navigates to home when no back history exists","duration":2,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue emits ready event on mount","status":"passed","title":"emits ready event on mount","duration":1,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue emits route-change event on route changes","status":"passed","title":"emits route-change event on route changes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue shows route title in subtitle when configured","status":"passed","title":"shows route title in subtitle when configured","duration":3,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue shows route title in middle when configured","status":"passed","title":"shows route title in middle when configured","duration":3,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue provides services to child components","status":"failed","title":"provides services to child components","duration":1,"failureMessages":["expected undefined not to be undefined"],"location":{"line":350,"column":37}},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue initializes network monitoring on mount","status":"passed","title":"initializes network monitoring on mount","duration":1,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue renders popup and toast components","status":"passed","title":"renders popup and toast components","duration":1,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue applies theme styles correctly","status":"passed","title":"applies theme styles correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue renders topbar actions slot","status":"passed","title":"renders topbar actions slot","duration":3,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue shows back button when not on home route","status":"passed","title":"shows back button when not on home route","duration":3,"failureMessages":[]},{"ancestorTitles":["","TFramework.vue"],"fullName":" TFramework.vue hides back button when on home route","status":"passed","title":"hides back button when on home route","duration":4,"failureMessages":[]}],"startTime":1752873119003,"endTime":1752873119067,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TFramework/TFramework.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":12,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue loads and displays icon by name","status":"passed","title":"loads and displays icon by name","duration":9,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue applies animation class when animation prop is true","status":"passed","title":"applies animation class when animation prop is true","duration":1,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue maps icon aliases correctly","status":"passed","title":"maps icon aliases correctly","duration":25,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue uses original name when no alias exists","status":"passed","title":"uses original name when no alias exists","duration":3,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue updates icon when name prop changes","status":"passed","title":"updates icon when name prop changes","duration":9,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue renders SVG content correctly","status":"passed","title":"renders SVG content correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue applies correct CSS classes for styling","status":"passed","title":"applies correct CSS classes for styling","duration":1,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue handles empty name prop gracefully","status":"passed","title":"handles empty name prop gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","TIcon.vue"],"fullName":" TIcon.vue maintains reactivity when toggling animation","status":"passed","title":"maintains reactivity when toggling animation","duration":3,"failureMessages":[]}],"startTime":1752873121033,"endTime":1752873121100,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TIcon/TIcon.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue renders correctly with basic props","status":"passed","title":"renders correctly with basic props","duration":13,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue shows required asterisk when required is true","status":"passed","title":"shows required asterisk when required is true","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies correct input type","status":"passed","title":"applies correct input type","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue shows placeholder text","status":"passed","title":"shows placeholder text","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies disabled state correctly","status":"passed","title":"applies disabled state correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies readonly state correctly","status":"passed","title":"applies readonly state correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue shows error state when error prop is provided","status":"passed","title":"shows error state when error prop is provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue shows help text when provided","status":"passed","title":"shows help text when provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue displays prefix icon when provided","status":"passed","title":"displays prefix icon when provided","duration":5,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue displays suffix icon when provided","status":"passed","title":"displays suffix icon when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue shows spinners for number input when enabled","status":"passed","title":"shows spinners for number input when enabled","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue emits update:modelValue on input","status":"passed","title":"emits update:modelValue on input","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue emits focus event on input focus","status":"passed","title":"emits focus event on input focus","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue emits blur event on input blur","status":"passed","title":"emits blur event on input blur","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue emits keydown event on keydown","status":"passed","title":"emits keydown event on keydown","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue increments number value when up spinner is clicked","status":"passed","title":"increments number value when up spinner is clicked","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue decrements number value when down spinner is clicked","status":"passed","title":"decrements number value when down spinner is clicked","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue respects min and max values for number input","status":"passed","title":"respects min and max values for number input","duration":6,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies step attribute for number input","status":"passed","title":"applies step attribute for number input","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies correct aria attributes","status":"passed","title":"applies correct aria attributes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue generates unique input id","status":"passed","title":"generates unique input id","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies focused class on focus","status":"passed","title":"applies focused class on focus","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue removes focused class on blur","status":"passed","title":"removes focused class on blur","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue applies correct size classes","status":"passed","title":"applies correct size classes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInput.vue"],"fullName":" TInput.vue handles null/undefined modelValue gracefully","status":"passed","title":"handles null/undefined modelValue gracefully","duration":1,"failureMessages":[]}],"startTime":1752873119518,"endTime":1752873119579,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TInput/TInput.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step renders correctly with email step","status":"passed","title":"renders correctly with email step","duration":25,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step shows email input field in email step","status":"passed","title":"shows email input field in email step","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step shows Apple Sign-In button","status":"passed","title":"shows Apple Sign-In button","duration":6,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step shows SSO button when enabled and not in Tiko app","status":"passed","title":"shows SSO button when enabled and not in Tiko app","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step hides SSO button when disabled","status":"passed","title":"hides SSO button when disabled","duration":2,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step hides SSO button for Tiko app","status":"passed","title":"hides SSO button for Tiko app","duration":2,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step emits emailSubmit when form is submitted with valid email","status":"passed","title":"emits emailSubmit when form is submitted with valid email","duration":9,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step does not emit emailSubmit with invalid email","status":"passed","title":"does not emit emailSubmit with invalid email","duration":2,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step emits appleSignIn when Apple button is clicked","status":"passed","title":"emits appleSignIn when Apple button is clicked","duration":6,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step switches to register mode when register link is clicked","status":"passed","title":"switches to register mode when register link is clicked","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Email Step"],"fullName":" TLoginForm.vue Email Step disables inputs when isLoading is true","status":"passed","title":"disables inputs when isLoading is true","duration":3,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step shows verification step after email submission","status":"passed","title":"shows verification step after email submission","duration":3,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step shows verification code input","status":"passed","title":"shows verification code input","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step emits verificationSubmit with valid code","status":"passed","title":"emits verificationSubmit with valid code","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step does not emit verificationSubmit with invalid code","status":"passed","title":"does not emit verificationSubmit with invalid code","duration":3,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step shows resend code button with cooldown","status":"passed","title":"shows resend code button with cooldown","duration":8,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step emits resendCode when resend button is clicked","status":"passed","title":"emits resendCode when resend button is clicked","duration":4,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Verification Step"],"fullName":" TLoginForm.vue Verification Step allows going back to email step","status":"passed","title":"allows going back to email step","duration":3,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Register Step"],"fullName":" TLoginForm.vue Register Step shows register form when switching to register mode","status":"passed","title":"shows register form when switching to register mode","duration":2,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Register Step"],"fullName":" TLoginForm.vue Register Step emits emailSubmit with fullName when registering","status":"passed","title":"emits emailSubmit with fullName when registering","duration":5,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Register Step"],"fullName":" TLoginForm.vue Register Step allows switching back to login mode","status":"passed","title":"allows switching back to login mode","duration":3,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Error Handling"],"fullName":" TLoginForm.vue Error Handling shows error message when error prop is provided","status":"failed","title":"shows error message when error prop is provided","duration":8,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":473,"column":33}},{"ancestorTitles":["","TLoginForm.vue","Error Handling"],"fullName":" TLoginForm.vue Error Handling shows error icon with error message","status":"failed","title":"shows error icon with error message","duration":4,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":486,"column":34}},{"ancestorTitles":["","TLoginForm.vue","Error Handling"],"fullName":" TLoginForm.vue Error Handling shows try again button with error","status":"failed","title":"shows try again button with error","duration":2,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":499,"column":39}},{"ancestorTitles":["","TLoginForm.vue","Error Handling"],"fullName":" TLoginForm.vue Error Handling emits clearError when try again is clicked","status":"failed","title":"emits clearError when try again is clicked","duration":3,"failureMessages":["Cannot call trigger on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TLoginForm.vue","Loading States"],"fullName":" TLoginForm.vue Loading States shows loading state on submit button","status":"passed","title":"shows loading state on submit button","duration":1,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","Loading States"],"fullName":" TLoginForm.vue Loading States disables all interactive elements when loading","status":"passed","title":"disables all interactive elements when loading","duration":2,"failureMessages":[]},{"ancestorTitles":["","TLoginForm.vue","CSS Classes"],"fullName":" TLoginForm.vue CSS Classes applies correct BEM classes","status":"passed","title":"applies correct BEM classes","duration":2,"failureMessages":[]}],"startTime":1752873119004,"endTime":1752873119132,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TLoginForm/TLoginForm.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue renders correctly with user data","status":"passed","title":"renders correctly with user data","duration":38,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue displays user avatar","status":"passed","title":"displays user avatar","duration":6,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue shows user initials when no avatar is available","status":"passed","title":"shows user initials when no avatar is available","duration":8,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue prefills form with user data","status":"failed","title":"prefills form with user data","duration":13,"failureMessages":["expected '' to be 'John Doe' // Object.is equality"],"location":{"line":142,"column":43}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue displays user email as readonly","status":"failed","title":"displays user email as readonly","duration":4,"failureMessages":["Cannot read properties of undefined (reading 'props')"],"location":{"line":158,"column":23}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue displays member since date","status":"failed","title":"displays member since date","duration":3,"failureMessages":["expected 'Click to change avatarNameLanguageEma…' to contain 'January 1, 2023'"],"location":{"line":171,"column":28}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue handles avatar upload","status":"failed","title":"handles avatar upload","duration":6,"failureMessages":["[vue-test-utils]: you cannot set the target value of an event. See the notes section of the docs for more details—https://vue-test-utils.vuejs.org/api/wrapper/trigger.html"],"location":{"line":7310,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue validates image file types","status":"failed","title":"validates image file types","duration":4,"failureMessages":["[vue-test-utils]: you cannot set the target value of an event. See the notes section of the docs for more details—https://vue-test-utils.vuejs.org/api/wrapper/trigger.html"],"location":{"line":7310,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue validates image file size","status":"failed","title":"validates image file size","duration":232,"failureMessages":["[vue-test-utils]: you cannot set the target value of an event. See the notes section of the docs for more details—https://vue-test-utils.vuejs.org/api/wrapper/trigger.html"],"location":{"line":7310,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue updates user metadata on form submission","status":"failed","title":"updates user metadata on form submission","duration":5,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue shows loading state during form submission","status":"failed","title":"shows loading state during form submission","duration":3,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue shows error message on update failure","status":"failed","title":"shows error message on update failure","duration":3,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue calls onClose when cancel button is clicked","status":"passed","title":"calls onClose when cancel button is clicked","duration":5,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue calls onClose after successful update","status":"failed","title":"calls onClose after successful update","duration":5,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue shows avatar upload overlay on hover","status":"passed","title":"shows avatar upload overlay on hover","duration":5,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue generates consistent avatar color based on email","status":"failed","title":"generates consistent avatar color based on email","duration":3,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":340,"column":40}},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue provides language options","status":"passed","title":"provides language options","duration":4,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue handles user without metadata gracefully","status":"passed","title":"handles user without metadata gracefully","duration":4,"failureMessages":[]},{"ancestorTitles":["","TProfile.vue"],"fullName":" TProfile.vue resizes uploaded images","status":"failed","title":"resizes uploaded images","duration":8,"failureMessages":["[vue-test-utils]: you cannot set the target value of an event. See the notes section of the docs for more details—https://vue-test-utils.vuejs.org/api/wrapper/trigger.html"],"location":{"line":7310,"column":27}}],"startTime":1752873119275,"endTime":1752873119634,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TProfile/TProfile.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":13,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue passes correct props to TButton","status":"passed","title":"passes correct props to TButton","duration":3,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue renders Tiko icon","status":"passed","title":"renders Tiko icon","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue handles click event correctly for web","status":"failed","title":"handles click event correctly for web","duration":8,"failureMessages":["expected 'https://app.tiko.mt/signin?return_to=…' to contain 'app_name=Test%20App'"],"location":{"line":91,"column":34}},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue renders custom slot content when provided","status":"passed","title":"renders custom slot content when provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue applies disabled state correctly","status":"passed","title":"applies disabled state correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue uses default values for props","status":"passed","title":"uses default values for props","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue handles Capacitor mobile app environment","status":"passed","title":"handles Capacitor mobile app environment","duration":3,"failureMessages":[]},{"ancestorTitles":["","TSSOButton.vue"],"fullName":" TSSOButton.vue falls back to web signin when Capacitor app open fails","status":"passed","title":"falls back to web signin when Capacitor app open fails","duration":14,"failureMessages":[]}],"startTime":1752873120628,"endTime":1752873120676,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TSSOButton/TSSOButton.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":12,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders SVG element","status":"passed","title":"renders SVG element","duration":4,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue applies size classes correctly","status":"passed","title":"applies size classes correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue applies color classes correctly","status":"passed","title":"applies color classes correctly","duration":8,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders circle with correct attributes","status":"passed","title":"renders circle with correct attributes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue has correct BEM classes on SVG elements","status":"passed","title":"has correct BEM classes on SVG elements","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue is an inline-block element","status":"passed","title":"is an inline-block element","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue maintains aspect ratio","status":"passed","title":"maintains aspect ratio","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders with small size","status":"passed","title":"renders with small size","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders with large size","status":"passed","title":"renders with large size","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue renders with secondary color","status":"passed","title":"renders with secondary color","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSpinner.vue"],"fullName":" TSpinner.vue combines size and color props correctly","status":"passed","title":"combines size and color props correctly","duration":2,"failureMessages":[]}],"startTime":1752873121118,"endTime":1752873121159,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TSpinner/TSpinner.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":17,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue displays app name correctly","status":"failed","title":"displays app name correctly","duration":8,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue displays custom app icon when provided","status":"failed","title":"displays custom app icon when provided","duration":3,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":71,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue displays Tiko logo when no app icon is provided","status":"passed","title":"displays Tiko logo when no app icon is provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue shows loading spinner when showLoading is true","status":"failed","title":"shows loading spinner when showLoading is true","duration":1,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":95,"column":30}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue hides loading spinner when showLoading is false","status":"passed","title":"hides loading spinner when showLoading is false","duration":1,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue displays loading text when provided","status":"failed","title":"displays loading text when provided","duration":2,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue displays version when provided","status":"failed","title":"displays version when provided","duration":1,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies custom background color","status":"failed","title":"applies custom background color","duration":3,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":142,"column":46}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies theme styles when provided","status":"failed","title":"applies theme styles when provided","duration":2,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":159,"column":46}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue emits complete event after duration","status":"failed","title":"emits complete event after duration","duration":2,"failureMessages":["expected undefined to be truthy"],"location":{"line":175,"column":41}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue emits complete event immediately when duration is 0","status":"failed","title":"emits complete event immediately when duration is 0","duration":1,"failureMessages":["expected undefined to be truthy"],"location":{"line":189,"column":41}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue does not emit complete event when duration is negative","status":"passed","title":"does not emit complete event when duration is negative","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies fade-in transition when enableTransitions is true","status":"failed","title":"applies fade-in transition when enableTransitions is true","duration":3,"failureMessages":["expected [ 'splash-screen--fade-in', …(1) ] to include 'splash-screen--transitions'"],"location":{"line":215,"column":54}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies correct size to app icon","status":"failed","title":"applies correct size to app icon","duration":1,"failureMessages":["Cannot call props on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies correct size to Tiko logo","status":"passed","title":"applies correct size to Tiko logo","duration":5,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies correct size to loading spinner","status":"failed","title":"applies correct size to loading spinner","duration":2,"failureMessages":["Cannot call props on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies correct color to loading spinner","status":"failed","title":"applies correct color to loading spinner","duration":1,"failureMessages":["Cannot call props on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue handles empty app name gracefully","status":"failed","title":"handles empty app name gracefully","duration":3,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue clears timeout on component unmount","status":"passed","title":"clears timeout on component unmount","duration":2,"failureMessages":[]},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue maintains proper component structure","status":"failed","title":"maintains proper component structure","duration":2,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":302,"column":59}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue applies correct CSS classes for different states","status":"failed","title":"applies correct CSS classes for different states","duration":1,"failureMessages":["expected [ 'splash-screen--fade-in', …(1) ] to include 'splash-screen--loading'"],"location":{"line":319,"column":36}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue handles theme object with missing properties","status":"failed","title":"handles theme object with missing properties","duration":2,"failureMessages":["the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"],"location":{"line":337,"column":46}},{"ancestorTitles":["","TSplashScreen.vue"],"fullName":" TSplashScreen.vue respects minimum duration for user experience","status":"failed","title":"respects minimum duration for user experience","duration":1,"failureMessages":["expected undefined to be truthy"],"location":{"line":352,"column":41}}],"startTime":1752873119518,"endTime":1752873119586,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TSplashScreen/TSplashScreen.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":14,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo applies custom color","status":"passed","title":"applies custom color","duration":4,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo applies small size correctly","status":"passed","title":"applies small size correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo applies large size correctly","status":"passed","title":"applies large size correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo applies custom width and height","status":"passed","title":"applies custom width and height","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo applies aria-label correctly","status":"passed","title":"applies aria-label correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo adds clickable class when clickable is true","status":"passed","title":"adds clickable class when clickable is true","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo emits click event when clickable","status":"passed","title":"emits click event when clickable","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTikoLogo"],"fullName":" TTikoLogo custom dimensions override size prop","status":"passed","title":"custom dimensions override size prop","duration":2,"failureMessages":[]}],"startTime":1752873121440,"endTime":1752873121472,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TTikoLogo/TTikoLogo.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TToast.vue"],"fullName":" TToast.vue component is still being implemented","status":"skipped","title":"component is still being implemented","failureMessages":[]}],"startTime":1752873118124,"endTime":1752873118124,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TToast/TToast.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue renders correctly with default props","status":"passed","title":"renders correctly with default props","duration":13,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue renders slot content correctly","status":"passed","title":"renders slot content correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue applies correct position classes","status":"passed","title":"applies correct position classes","duration":5,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue sets custom delay style","status":"passed","title":"sets custom delay style","duration":2,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue uses default delay when not specified","status":"passed","title":"uses default delay when not specified","duration":1,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue uses bottom position by default","status":"passed","title":"uses bottom position by default","duration":2,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue renders with minimal slot content","status":"passed","title":"renders with minimal slot content","duration":2,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue applies block classes correctly","status":"passed","title":"applies block classes correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue handles empty slot gracefully","status":"passed","title":"handles empty slot gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","TToolTip.vue"],"fullName":" TToolTip.vue handles HTML content in slot","status":"passed","title":"handles HTML content in slot","duration":2,"failureMessages":[]}],"startTime":1752873121444,"endTime":1752873121477,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TToolTip/TToolTip.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue renders correctly with basic props","status":"passed","title":"renders correctly with basic props","duration":18,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue displays subtitle when provided","status":"passed","title":"displays subtitle when provided","duration":3,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows back button when showBackButton is true","status":"passed","title":"shows back button when showBackButton is true","duration":6,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue hides back button when showBackButton is false","status":"passed","title":"hides back button when showBackButton is false","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue emits back event when back button is clicked","status":"failed","title":"emits back event when back button is clicked","duration":7,"failureMessages":["expected undefined to be truthy"],"location":{"line":159,"column":37}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue uses custom back button label","status":"failed","title":"uses custom back button label","duration":3,"failureMessages":["expected '' to be 'Go Back' // Object.is equality"],"location":{"line":174,"column":31}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows user info when showUserInfo is true","status":"failed","title":"shows user info when showUserInfo is true","duration":3,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":187,"column":60}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue hides user info when showUserInfo is false","status":"failed","title":"hides user info when showUserInfo is false","duration":2,"failureMessages":["expected true to be false // Object.is equality"],"location":{"line":199,"column":53}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue displays user avatar when available","status":"failed","title":"displays user avatar when available","duration":5,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":212,"column":29}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows user initials when no avatar is available","status":"failed","title":"shows user initials when no avatar is available","duration":4,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows online status when showOnlineStatus is true","status":"failed","title":"shows online status when showOnlineStatus is true","duration":2,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":240,"column":55}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue applies correct online status styling","status":"failed","title":"applies correct online status styling","duration":2,"failureMessages":["Cannot call classes on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue applies correct offline status styling","status":"failed","title":"applies correct offline status styling","duration":2,"failureMessages":["Cannot call classes on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows loading spinner when isLoading is true","status":"failed","title":"shows loading spinner when isLoading is true","duration":2,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":280,"column":66}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue hides loading spinner when isLoading is false","status":"passed","title":"hides loading spinner when isLoading is false","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows parent mode toggle when appropriate","status":"failed","title":"shows parent mode toggle when appropriate","duration":1,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":303,"column":75}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue shows context menu with user actions","status":"failed","title":"shows context menu with user actions","duration":1,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":315,"column":70}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue includes custom menu items in context menu","status":"failed","title":"includes custom menu items in context menu","duration":2,"failureMessages":["Cannot call props on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue emits profile event when profile menu item is clicked","status":"failed","title":"emits profile event when profile menu item is clicked","duration":2,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue emits settings event when settings menu item is clicked","status":"failed","title":"emits settings event when settings menu item is clicked","duration":1,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue emits logout event when logout menu item is clicked","status":"failed","title":"emits logout event when logout menu item is clicked","duration":1,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue emits menu-item-click event for custom menu items","status":"failed","title":"emits menu-item-click event for custom menu items","duration":1,"failureMessages":["Cannot call vm on an empty VueWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue renders center slot content","status":"passed","title":"renders center slot content","duration":7,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue renders actions slot content","status":"passed","title":"renders actions slot content","duration":3,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue applies correct CSS classes structure","status":"passed","title":"applies correct CSS classes structure","duration":2,"failureMessages":[]},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue generates consistent avatar color based on user email","status":"failed","title":"generates consistent avatar color based on user email","duration":1,"failureMessages":["Cannot call attributes on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue handles user without metadata gracefully","status":"failed","title":"handles user without metadata gracefully","duration":2,"failureMessages":["Cannot call text on an empty DOMWrapper."],"location":{"line":1574,"column":27}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue applies loading class when loading","status":"failed","title":"applies loading class when loading","duration":1,"failureMessages":["expected [ 'top-bar' ] to include 'top-bar--loading'"],"location":{"line":487,"column":48}},{"ancestorTitles":["","TTopBar.vue"],"fullName":" TTopBar.vue maintains responsive design","status":"failed","title":"maintains responsive design","duration":1,"failureMessages":["expected [ 'top-bar' ] to include 'top-bar--responsive'"],"location":{"line":498,"column":48}}],"startTime":1752873119158,"endTime":1752873119247,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TTopBar/TTopBar.spec.ts"},{"assertionResults":[{"ancestorTitles":["","DatePicker.utils","isToday"],"fullName":" DatePicker.utils isToday should return true if the date is today","status":"passed","title":"should return true if the date is today","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isToday"],"fullName":" DatePicker.utils isToday should return false if the date is not today","status":"passed","title":"should return false if the date is not today","duration":1,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isSelectedDate"],"fullName":" DatePicker.utils isSelectedDate should return true if the date is the selected date","status":"passed","title":"should return true if the date is the selected date","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isSelectedDate"],"fullName":" DatePicker.utils isSelectedDate should return false if the date is not the selected date","status":"passed","title":"should return false if the date is not the selected date","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isAvailableDate"],"fullName":" DatePicker.utils isAvailableDate should return true if the date is in the available dates array","status":"passed","title":"should return true if the date is in the available dates array","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isAvailableDate"],"fullName":" DatePicker.utils isAvailableDate should return false if the date is not in the available dates array","status":"passed","title":"should return false if the date is not in the available dates array","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isAvailableDate"],"fullName":" DatePicker.utils isAvailableDate should return true if the date is within an available date range","status":"passed","title":"should return true if the date is within an available date range","duration":0,"failureMessages":[]},{"ancestorTitles":["","DatePicker.utils","isAvailableDate"],"fullName":" DatePicker.utils isAvailableDate should return false if the date is outside an available date range","status":"passed","title":"should return false if the date is outside an available date range","duration":0,"failureMessages":[]}],"startTime":1752873121685,"endTime":1752873121686,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/DatePicker/DatePicker.util.spec.ts"},{"assertionResults":[{"ancestorTitles":["","InputEmail.vue"],"fullName":" InputEmail.vue renders correctly","status":"passed","title":"renders correctly","duration":12,"failureMessages":[]},{"ancestorTitles":["","InputEmail.vue"],"fullName":" InputEmail.vue sets initial value from props","status":"passed","title":"sets initial value from props","duration":3,"failureMessages":[]},{"ancestorTitles":["","InputEmail.vue"],"fullName":" InputEmail.vue updates model value correctly","status":"passed","title":"updates model value correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","InputEmail.vue"],"fullName":" InputEmail.vue emits change event on input","status":"passed","title":"emits change event on input","duration":3,"failureMessages":[]},{"ancestorTitles":["","InputEmail.vue"],"fullName":" InputEmail.vue validates email correctly","status":"passed","title":"validates email correctly","duration":8,"failureMessages":[]}],"startTime":1752873121554,"endTime":1752873121583,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/InputEmail/InputEmail.spec.ts"},{"assertionResults":[{"ancestorTitles":["","isEmail"],"fullName":" isEmail should return status 200 for valid email addresses","status":"passed","title":"should return status 200 for valid email addresses","duration":1,"failureMessages":[]},{"ancestorTitles":["","isEmail"],"fullName":" isEmail should return appropriate error messages for invalid email addresses","status":"passed","title":"should return appropriate error messages for invalid email addresses","duration":0,"failureMessages":[]}],"startTime":1752873121557,"endTime":1752873121559,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/validation/validation.test.ts"},{"assertionResults":[{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox renders properly","status":"passed","title":"renders properly","duration":13,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox passes props to InputBase correctly","status":"passed","title":"passes props to InputBase correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox renders checkbox input with correct type","status":"passed","title":"renders checkbox input with correct type","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox handles checked state correctly","status":"passed","title":"handles checked state correctly","duration":5,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox emits change event when clicked","status":"failed","title":"emits change event when clicked","duration":6,"failureMessages":["expected [ false ] to deeply equal [ true ]"],"location":{"line":61,"column":44}},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox emits touched event","status":"passed","title":"emits touched event","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox handles v-model properly","status":"passed","title":"handles v-model properly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox handles value prop when modelValue is not provided","status":"passed","title":"handles value prop when modelValue is not provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox applies correct BEM classes","status":"passed","title":"applies correct BEM classes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox disables checkbox when disabled prop is true","status":"failed","title":"disables checkbox when disabled prop is true","duration":2,"failureMessages":["expected undefined not to be undefined"],"location":{"line":120,"column":42}},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox renders label element with correct for attribute","status":"passed","title":"renders label element with correct for attribute","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputCheckbox"],"fullName":" TInputCheckbox toggles checkbox state on label click","status":"passed","title":"toggles checkbox state on label click","duration":6,"failureMessages":[]}],"startTime":1752873120967,"endTime":1752873121013,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputCheckbox/TInputCheckbox.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber renders properly","status":"passed","title":"renders properly","duration":21,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber passes all props to InputBase","status":"failed","title":"passes all props to InputBase","duration":9,"failureMessages":["expected undefined to be +0 // Object.is equality"],"location":{"line":33,"column":36}},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber parses numeric values correctly","status":"passed","title":"parses numeric values correctly","duration":7,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber formats numeric values correctly","status":"passed","title":"formats numeric values correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber shows error for multiple numbers","status":"failed","title":"shows error for multiple numbers","duration":4,"failureMessages":["expected [] to deeply equal [ 'Only one number is allowed' ]"],"location":{"line":77,"column":38}},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber emits change event when input changes","status":"passed","title":"emits change event when input changes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber emits touched event when input is touched","status":"passed","title":"emits touched event when input is touched","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber handles v-model properly","status":"passed","title":"handles v-model properly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputNumber"],"fullName":" TInputNumber uses correct block class","status":"passed","title":"uses correct block class","duration":1,"failureMessages":[]},{"ancestorTitles":["","parseNumericValue"],"fullName":" parseNumericValue parses valid numbers","status":"passed","title":"parses valid numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","parseNumericValue"],"fullName":" parseNumericValue handles invalid input","status":"passed","title":"handles invalid input","duration":0,"failureMessages":[]},{"ancestorTitles":["","parseNumericValue"],"fullName":" parseNumericValue respects decimal places","status":"passed","title":"respects decimal places","duration":1,"failureMessages":[]},{"ancestorTitles":["","formatNumericValue"],"fullName":" formatNumericValue formats basic numbers","status":"passed","title":"formats basic numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","formatNumericValue"],"fullName":" formatNumericValue handles undefined values","status":"passed","title":"handles undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","formatNumericValue"],"fullName":" formatNumericValue formats with decimal places","status":"passed","title":"formats with decimal places","duration":0,"failureMessages":[]},{"ancestorTitles":["","formatNumericValue"],"fullName":" formatNumericValue formats with thousands separators","status":"passed","title":"formats with thousands separators","duration":0,"failureMessages":[]}],"startTime":1752873120520,"endTime":1752873120574,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputNumber/TInputNumber.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio renders properly","status":"passed","title":"renders properly","duration":11,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio passes props to InputBase correctly","status":"passed","title":"passes props to InputBase correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio renders radio input with correct attributes","status":"passed","title":"renders radio input with correct attributes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio handles checked state correctly when modelValue matches value","status":"passed","title":"handles checked state correctly when modelValue matches value","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio emits change event when selected","status":"passed","title":"emits change event when selected","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio emits touched event","status":"passed","title":"emits touched event","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio disables radio when disabled prop is true","status":"failed","title":"disables radio when disabled prop is true","duration":5,"failureMessages":["expected undefined not to be undefined"],"location":{"line":93,"column":42}},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio applies correct BEM classes","status":"passed","title":"applies correct BEM classes","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio renders label with correct for attribute","status":"passed","title":"renders label with correct for attribute","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio works as part of a radio group","status":"passed","title":"works as part of a radio group","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputRadio"],"fullName":" TInputRadio handles visual styling for checked state","status":"passed","title":"handles visual styling for checked state","duration":3,"failureMessages":[]}],"startTime":1752873120947,"endTime":1752873120988,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputRadio/TInputRadio.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect renders properly","status":"passed","title":"renders properly","duration":13,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect passes props to InputBase correctly","status":"passed","title":"passes props to InputBase correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect renders simple string options","status":"passed","title":"renders simple string options","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect renders object options with label and value","status":"passed","title":"renders object options with label and value","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect renders grouped options correctly","status":"passed","title":"renders grouped options correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect renders null option when allowNull is true","status":"passed","title":"renders null option when allowNull is true","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect emits change event with selected value","status":"passed","title":"emits change event with selected value","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect emits change event with null when allowNull and empty selected","status":"passed","title":"emits change event with null when allowNull and empty selected","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect emits touched event","status":"failed","title":"emits touched event","duration":3,"failureMessages":["Cannot read properties of undefined (reading 'some')"],"location":{"line":43,"column":17}},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect handles v-model properly","status":"passed","title":"handles v-model properly","duration":5,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect handles null modelValue correctly","status":"passed","title":"handles null modelValue correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect disables select when disabled prop is true","status":"failed","title":"disables select when disabled prop is true","duration":5,"failureMessages":["expected undefined not to be undefined"],"location":{"line":206,"column":43}},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect applies custom CSS classes","status":"passed","title":"applies custom CSS classes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputSelect"],"fullName":" TInputSelect throws error for invalid option format","status":"passed","title":"throws error for invalid option format","duration":2,"failureMessages":[]}],"startTime":1752873120119,"endTime":1752873120171,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputSelect/TInputSelect.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputText"],"fullName":" TInputText renders properly","status":"passed","title":"renders properly","duration":17,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText passes all props to InputBase","status":"passed","title":"passes all props to InputBase","duration":5,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText emits change event when input changes","status":"passed","title":"emits change event when input changes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText emits touched event when input is touched","status":"passed","title":"emits touched event when input is touched","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText emits focus event when input is focused","status":"passed","title":"emits focus event when input is focused","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText emits blur event when input loses focus","status":"passed","title":"emits blur event when input loses focus","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText emits reset event when reset is triggered","status":"passed","title":"emits reset event when reset is triggered","duration":7,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText handles v-model properly","status":"passed","title":"handles v-model properly","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputText"],"fullName":" TInputText uses correct block class","status":"passed","title":"uses correct block class","duration":1,"failureMessages":[]}],"startTime":1752873121331,"endTime":1752873121373,"status":"passed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputText/TInputText.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea renders properly","status":"passed","title":"renders properly","duration":42,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea passes props to InputBase correctly","status":"passed","title":"passes props to InputBase correctly","duration":7,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea renders textarea with correct attributes","status":"failed","title":"renders textarea with correct attributes","duration":9,"failureMessages":["expected undefined to be '' // Object.is equality"],"location":{"line":46,"column":45}},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea applies no-resize class when allowResize is false","status":"passed","title":"applies no-resize class when allowResize is false","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea emits change event when textarea value changes","status":"passed","title":"emits change event when textarea value changes","duration":8,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea emits touched event","status":"passed","title":"emits touched event","duration":6,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea handles v-model properly","status":"passed","title":"handles v-model properly","duration":5,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea auto-grows when content increases","status":"failed","title":"auto-grows when content increases","duration":5,"failureMessages":["expected '3px' to be '60px' // Object.is equality"],"location":{"line":117,"column":48}},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea respects maxRows limit","status":"passed","title":"respects maxRows limit","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea uses correct block class","status":"passed","title":"uses correct block class","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInputTextArea"],"fullName":" TInputTextArea applies correct styles based on rows configuration","status":"failed","title":"applies correct styles based on rows configuration","duration":2,"failureMessages":["expected '80px' to be '96px' // Object.is equality"],"location":{"line":201,"column":30}},{"ancestorTitles":["","getTextStats"],"fullName":" getTextStats counts characters correctly","status":"passed","title":"counts characters correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","getTextStats"],"fullName":" getTextStats counts words correctly","status":"passed","title":"counts words correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","getTextStats"],"fullName":" getTextStats counts lines correctly","status":"passed","title":"counts lines correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","truncateText"],"fullName":" truncateText does not truncate text shorter than limit","status":"passed","title":"does not truncate text shorter than limit","duration":1,"failureMessages":[]},{"ancestorTitles":["","truncateText"],"fullName":" truncateText truncates text longer than limit","status":"passed","title":"truncates text longer than limit","duration":0,"failureMessages":[]},{"ancestorTitles":["","truncateText"],"fullName":" truncateText uses custom ellipsis","status":"passed","title":"uses custom ellipsis","duration":0,"failureMessages":[]},{"ancestorTitles":["","truncateText"],"fullName":" truncateText handles edge cases","status":"passed","title":"handles edge cases","duration":0,"failureMessages":[]}],"startTime":1752873119820,"endTime":1752873119912,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputTextArea/TInputTextArea.spec.ts"},{"assertionResults":[{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle renders properly","status":"passed","title":"renders properly","duration":13,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle passes props to InputBase correctly","status":"passed","title":"passes props to InputBase correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle renders hidden checkbox input","status":"passed","title":"renders hidden checkbox input","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle handles toggle state correctly","status":"passed","title":"handles toggle state correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle emits change event when toggled","status":"passed","title":"emits change event when toggled","duration":4,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle emits touched event","status":"passed","title":"emits touched event","duration":1,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle handles v-model properly","status":"passed","title":"handles v-model properly","duration":3,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle applies correct BEM classes","status":"passed","title":"applies correct BEM classes","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle disables toggle when disabled prop is true","status":"failed","title":"disables toggle when disabled prop is true","duration":5,"failureMessages":["expected undefined to be '' // Object.is equality"],"location":{"line":119,"column":42}},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle hides icon when showIcon is false","status":"failed","title":"hides icon when showIcon is false","duration":5,"failureMessages":["expected 'input-toggle__label' to contain 'input-toggle__label--no-icon'"],"location":{"line":135,"column":39}},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle renders label with correct for attribute","status":"passed","title":"renders label with correct for attribute","duration":2,"failureMessages":[]},{"ancestorTitles":["","TInputToggle"],"fullName":" TInputToggle maintains visual toggle state","status":"passed","title":"maintains visual toggle state","duration":9,"failureMessages":[]}],"startTime":1752873120835,"endTime":1752873120888,"status":"failed","message":"","name":"/Users/silvandiepen/Repositories/_tiko/tiko-mono/packages/ui/src/components/TForm/inputs/TInputToggle/TInputToggle.spec.ts"}]}